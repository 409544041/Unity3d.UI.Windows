		
		/// <summary>
		/// Flows to the {CLASS_NAME}.
		/// Use this method to play transition effect on B window only.
		/// If you call Hide() on A window - it will hide with standard behaviour.
		/// Full Name: {CLASS_NAME_WITH_NAMESPACE}
		/// </summary>
		/// <returns>{CLASS_NAME}</returns>
		public virtual {CLASS_NAME_WITH_NAMESPACE} Flow{CLASS_NAME}() {
			
			return this.INTERNAL_Flow{CLASS_NAME}(hide: false);
			
		}
		
		/// <summary>
		/// Flows to the {CLASS_NAME}.
		/// Hides current window.
		/// Use this method to play transition effect on both windows (A and B).
		/// Full Name: {CLASS_NAME_WITH_NAMESPACE}
		/// </summary>
		/// <returns>{CLASS_NAME}</returns>
		public virtual {CLASS_NAME_WITH_NAMESPACE} FlowHide{CLASS_NAME}() {
			
			return this.INTERNAL_Flow{CLASS_NAME}(hide: true);
			
		}
		
		private {CLASS_NAME_WITH_NAMESPACE} INTERNAL_Flow{CLASS_NAME}(bool hide, System.Action<{CLASS_NAME_WITH_NAMESPACE}> onParametersPassCall = null) {
			
			return WindowSystemFlow.DoFlow<{CLASS_NAME_WITH_NAMESPACE}>(this, {FLOW_FROM_ID}, {FLOW_TO_ID}, hide, onParametersPassCall);
			
		}
		