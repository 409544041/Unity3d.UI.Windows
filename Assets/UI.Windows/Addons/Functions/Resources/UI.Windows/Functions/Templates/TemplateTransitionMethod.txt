		
		public class FlowFunction{FUNCTION_CALL_NAME}Routes : WindowRoutes {
			
			public FlowFunction{FUNCTION_CALL_NAME}Routes(int index) : base(index) {}
			{TRANSITION_METHODS}
		}
		
		/// <summary>
		/// Call the Function {FUNCTION_CALL_NAME}.
		/// Function: {FUNCTION_NAME}
		/// </summary>
		/// <returns>Function root window</returns>
		public virtual {CLASS_NAME_WITH_NAMESPACE} FlowFunction{FUNCTION_CALL_NAME}(UnityEngine.Events.UnityAction<FlowFunction{FUNCTION_CALL_NAME}Routes> onFunctionEnds, params object[] parameters) {
			
			{CLASS_NAME_WITH_NAMESPACE} instance = null;
			var item = UnityEngine.UI.Windows.Plugins.Flow.FlowSystem.GetAttachItem({FLOW_FROM_ID}, {FLOW_TO_ID});
			if (item == null || item.transition == null) {
				
				instance = WindowSystem.Show<{CLASS_NAME_WITH_NAMESPACE}>((window) => {
					
					WindowSystem.RegisterFunctionCallback(window, (index) => { onFunctionEnds(new FlowFunction{FUNCTION_CALL_NAME}Routes(index)); });
					
				}, parameters);
				
			} else {
				
				instance = WindowSystem.Show<{CLASS_NAME_WITH_NAMESPACE}>((window) => {
					
					WindowSystem.RegisterFunctionCallback(window, (index) => { onFunctionEnds(new FlowFunction{FUNCTION_CALL_NAME}Routes(index)); });
					
				}, item.transition, item.transitionParameters, parameters);
				
			}
			
			return instance;
			
		}
		